import { useEffect, useState } from "react";
import styles from "./Demo.module.css";

export default function Demo() {
  const [age, setAge] = useState(0);
  const [weight, setWeight] = useState(0);
  const [effect1Log, setEffect1Log] = useState<string[]>([]);
  const [effect2Log, setEffect2Log] = useState<string[]>([]);
  const [effect3Log, setEffect3Log] = useState<string[]>([]);

  // –í–∞—Ä–∏–∞–Ω—Ç 1 - –±–µ–∑ –º–∞—Å—Å–∏–≤–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
  useEffect(() => {
    const log = `Effect 1: –í—ã–ø–æ–ª–Ω–µ–Ω (–±–µ–∑ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π)`;
    setEffect1Log((prev) => [...prev.slice(-10), log]);
    console.log("Variant 1 - no array");
  });

  // –í–∞—Ä–∏–∞–Ω—Ç 2 - —Å –ø—É—Å—Ç—ã–º –º–∞—Å—Å–∏–≤–æ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
  useEffect(() => {
    const log = `Effect 2: –í—ã–ø–æ–ª–Ω–µ–Ω (–ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π)`;
    setEffect2Log((prev) => [...prev, log]);
    console.log("Variant 2 - empty dependencies array!");
  }, []);

  // –í–∞—Ä–∏–∞–Ω—Ç 3 - —Å –º–∞—Å—Å–∏–≤–æ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
  useEffect(() => {
    const log = `Effect 3: –í—ã–ø–æ–ª–Ω–µ–Ω (–∑–∞–≤–∏—Å–∏—Ç –æ—Ç age: ${age})`;
    setEffect3Log((prev) => [...prev.slice(-4), log]);
    console.log("Variant 3 - with dependencies array!");
  }, [age]);

  const resetLogs = () => {
    setEffect1Log([]);
    setEffect2Log([]);
    setEffect3Log([]);
  };

  return (
    <>
      <div className={styles.container}>
        <div className={styles.card}>
          <h2 className={styles.title}>üîÑ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è useEffect</h2>
          <p className={styles.subtitle}>
            –ò–∑—É—á–µ–Ω–∏–µ –∂–∏–∑–Ω–µ–Ω–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
          </p>

          <div className={styles.demoArea}>
            <div className={styles.stats}>
              <div className={styles.stat}>
                <span className={styles.statLabel}>Age:</span>
                <span className={styles.statValue}>{age}</span>
              </div>
              <div className={styles.stat}>
                <span className={styles.statLabel}>Weight:</span>
                <span className={styles.statValue}>{weight}</span>
              </div>
            </div>

            <div className={styles.buttons}>
              <button
                className={styles.button}
                onClick={() => setAge((prev) => prev + 1)}
              >
                +1 Age
              </button>
              <button
                className={styles.button}
                onClick={() => setWeight((prev) => prev + 1)}
              >
                +1 Weight
              </button>
              <button
                className={`${styles.button} ${styles.secondary}`}
                onClick={resetLogs}
              >
                –û—á–∏—Å—Ç–∏—Ç—å –ª–æ–≥–∏
              </button>
            </div>
          </div>

          <div className={styles.explanation}>
            <h3 className={styles.sectionTitle}>–ñ–∏–∑–Ω–µ–Ω–Ω—ã–π —Ü–∏–∫–ª –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞:</h3>
            <ul className={styles.cycleList}>
              <li>1. Mount - —É—Å—Ç–∞–Ω–æ–≤–∫–∞ (–ø–µ—Ä–≤—ã–π —Ä–µ–Ω–¥–µ—Ä –Ω–∞ —ç–∫—Ä–∞–Ω–µ)</li>
              <li>2. Update - –∏–∑–º–µ–Ω–µ–Ω–∏—è (–ª—é–±—ã–µ —Ä–µ—Ä–µ–Ω–¥–µ—Ä—ã)</li>
              <li>3. Unmount - —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ (–∫–æ–≥–¥–∞ –∏—Å—á–µ–∑–∞–µ—Ç —Å —ç–∫—Ä–∞–Ω–∞)</li>
            </ul>
          </div>
        </div>
      </div>
      
      <div className={styles.container}>
        <div className={styles.card}>
          <div className={styles.logs}>
            <div className={styles.logSection}>
              <h2 className={styles.logTitle}>
                Effect 1:{" "}
                <span className={styles.effectType}>–ë–µ–∑ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π</span>
              </h2>
              <p className={styles.logDescription}>
                –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø—Ä–∏ –∫–∞–∂–¥–æ–º —Ä–µ–Ω–¥–µ—Ä–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
              </p>
              <div className={styles.logList}>
                {effect1Log.map((log, index) => (
                  <div key={index} className={styles.logItem}>
                    {log}
                  </div>
                ))}
              </div>
            </div>
          </div>
        </div>
      </div>
      <div className={styles.container}>
        <div className={styles.card}>
          <div className={styles.logSection}>
            <h2 className={styles.logTitle}>
              Effect 2: <span className={styles.effectType}>–ü—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤</span>
            </h2>
            <p className={styles.logDescription}>
              –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º —Ä–µ–Ω–¥–µ—Ä–µ (mount)
            </p>
            <div className={styles.logList}>
              {effect2Log.map((log, index) => (
                <div key={index} className={styles.logItem}>
                  {log}
                </div>
              ))}
            </div>
          </div>
          <div className={styles.logSection}>
            <h3 className={styles.logTitle}>
              Effect 3:{" "}
              <span className={styles.effectType}>–ó–∞–≤–∏—Å–∏—Ç –æ—Ç [age]</span>
            </h3>
            <p className={styles.logDescription}>
              –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø—Ä–∏ –ø–µ—Ä–≤–æ–º —Ä–µ–Ω–¥–µ—Ä–µ –∏ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ age
            </p>
            <div className={styles.logList}>
              {effect3Log.map((log, index) => (
                <div key={index} className={styles.logItem}>
                  {log}
                </div>
              ))}
            </div>
          </div>
        </div>
      </div>
    </>
  );
}
